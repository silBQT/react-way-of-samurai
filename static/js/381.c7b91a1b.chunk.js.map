{"version":3,"file":"static/js/381.c7b91a1b.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.js","webpack://social-network-app/./src/pages/Profile/ProfileInfo/ProfileInfo.module.scss?a6e6","pages/Profile/ProfileInfo/ProfileStatus.jsx","pages/Profile/ProfileInfo/ProfileInfo.jsx","pages/Profile/Profile.module.scss","webpack://social-network-app/./src/pages/Profile/Posts/Posts.module.scss?ca66","webpack://social-network-app/./src/pages/Profile/Posts/Post/Post.module.scss?bf2a","pages/Profile/Posts/Post/Post.jsx","pages/Profile/Posts/AddPostForm/AddPostForm.jsx","pages/Profile/Posts/AddPostForm/AddPostFormRedux.js","pages/Profile/Posts/Posts.jsx","pages/Profile/Posts/PostsContainer.jsx","pages/Profile/Profile.jsx","pages/Profile/ProfileContainer.jsx","webpack://social-network-app/./src/pages/common/FormsControls/FormsControls.module.scss?c0b5","pages/common/FormsControls/FormsControls.jsx","utils/validators/validators.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to=\"/login\" />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile_info__banner\":\"ProfileInfo_profile_info__banner__teem6\",\"profile_info__wrapper\":\"ProfileInfo_profile_info__wrapper__Xu5+R\",\"profile_info__pic\":\"ProfileInfo_profile_info__pic__dEWGu\",\"profile_info__content\":\"ProfileInfo_profile_info__content__hsN-j\",\"profile_info__name\":\"ProfileInfo_profile_info__name__pBezn\"};","import React, { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [status, setStatus] = useState(props.status);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    if (!editMode) return (\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || \"Нет статуса\"}</span>\r\n        </div>\r\n    )\r\n    return (\r\n        <div>\r\n            <input onChange={onChangeStatus} onBlur={deactivateEditMode} autoFocus={true} value={status} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react'\r\n\r\nimport styles from './ProfileInfo.module.scss'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport userImage from '../../../assets/images/user.svg'\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div className={styles.profile_info}>\r\n        <img className={styles.profile_info__banner} src=\"https://pixelbox.ru/wp-content/uploads/2021/10/banner-twitch-anime-pixelbox.ru-10-scaled.jpg\" alt=\"profile_banner\"/>\r\n        <div className={styles.profile_info__wrapper}>\r\n          <img src={props.profile.photos.large != null ? props.profile.photos.large : userImage } alt=\"profile_pic\" className={styles.profile_info__pic} />\r\n          <div className={styles.profile_info__content}>\r\n            <span className={styles.profile_info__name}>{props.profile.fullName}</span>\r\n            <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            {props.profile.aboutMe != null && `О себе: ${props.profile.aboutMe}` } <br />\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__FKzX6\",\"posts__wrapper\":\"Posts_posts__wrapper__5FSDX\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__W92pf\",\"post__body\":\"Post_post__body__uhr0l\",\"post__info\":\"Post_post__info__GXva1\"};","import React from 'react';\r\n\r\nimport styles from './Post.module.scss'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <div className={styles.post__body}>\r\n        <img src=\"https://bigpicture.ru/wp-content/uploads/2022/06/bigpicture_ru_bez-nazvanija-2022-06-24t183807.456.jpg\" alt=\"profile_pic\" />\r\n        {props.body}\r\n      </div>\r\n      <div className={styles.post__info}>\r\n        Likes: {props.likesCount}\r\n        <button>Like</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../../utils/validators/validators'\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[required, maxLength50]} name=\"newPostBody\" placeholder='your news...' />\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddPostForm","import { compose } from \"redux\";\r\nimport AddPostForm from \"./AddPostForm\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nexport default compose(reduxForm({form: 'profileAddPostForm'}))(AddPostForm);","import React from 'react';\r\n\r\nimport styles from './Posts.module.scss';\r\nimport Post from './Post/Post';\r\nimport AddPostFormRedux from './AddPostForm/AddPostFormRedux';\r\n\r\nconst Posts = React.memo((props) => {\r\n\r\n  let postElements = props.posts.map(p => <Post key={p.id} id={p.id} body={p.body} likesCount={p.likesCount} />)\r\n\r\n  const addNewPost = (formData) => {\r\n    props.addPost(formData.newPostBody);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.posts}>\r\n      <h2>My posts</h2>\r\n      <AddPostFormRedux onSubmit={addNewPost}/>\r\n      <div className={styles.posts__wrapper}>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Posts","import { addPost } from '../../../redux/profile-reducer';\r\nimport Posts from './Posts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addPost\r\n})(Posts);","import React from 'react';\r\n\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nimport styles from './Profile.module.scss';\r\nimport PostsContainer from './Posts/PostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n        <PostsContainer />\r\n    </div>\r\n  )\r\n}\r\nexport default Profile","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../redux/profile-reducer';\r\nimport withRouter from '../../withRouter';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) this.props.history.push(\"/login\");\r\n        };\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.userId\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus } ),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__JXR2U\",\"error\":\"FormsControls_error__gRq-8\"};","import styles from './FormsControls.module.scss'\r\n\r\nconst Element = (Element) => ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    \r\n    return (\r\n        <div className={`${styles.formControl} ${hasError && styles.error}`}>\r\n            <Element {...input} {...props} />\r\n            { hasError && <div>{meta.error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = Element('textarea')\r\nexport const Input = Element('input')","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required!'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols!`;\r\n    return undefined;\r\n}"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","_jsx","Navigate","to","status","setStatus","useState","editMode","setEditMode","useEffect","children","onChange","e","target","value","onBlur","deactivateEditMode","updateUserStatus","autoFocus","onDoubleClick","activateEditMode","profile","_jsxs","className","styles","profile_info","profile_info__banner","src","alt","profile_info__wrapper","photos","large","userImage","profile_info__pic","profile_info__content","profile_info__name","fullName","ProfileStatus","aboutMe","concat","Preloader","body","likesCount","maxLength50","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","compose","reduxForm","form","AddPostForm","React","postElements","posts","map","p","Post","id","AddPostFormRedux","formData","addPost","newPostBody","profilePage","Posts","ProfileInfo","PostsContainer","ProfileContainer","componentDidMount","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getUserStatus","render","Profile","withRouter","Element","_ref","input","meta","hasError","error","touched","Input","maxLength","length"],"sourceRoot":""}