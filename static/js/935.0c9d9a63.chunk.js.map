{"version":3,"file":"static/js/935.0c9d9a63.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.js","webpack://social-network-app/./src/pages/Dialogs/Dialog/Dialog.module.scss?ef89","pages/Dialogs/Dialog/Dialog.jsx","webpack://social-network-app/./src/pages/Dialogs/Message/Message.module.scss?8bb3","pages/Dialogs/Message/Message.jsx","webpack://social-network-app/./src/pages/Dialogs/Dialogs.module.scss?f5ce","pages/Dialogs/AddMessageForm/AddMessageForm.jsx","pages/Dialogs/AddMessageForm/AddMessageFormRedux.js","pages/Dialogs/Dialogs.jsx","pages/Dialogs/DialogsContainer.jsx","webpack://social-network-app/./src/pages/common/FormsControls/FormsControls.module.scss?c0b5","pages/common/FormsControls/FormsControls.jsx","utils/validators/validators.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to=\"/login\" />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__NtB+Z\",\"dialog__wrapper\":\"Dialog_dialog__wrapper__cF8bp\"};","import React from 'react';\r\n\r\nimport styles from './Dialog.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n  const path = `/dialogs/${props.id}`;\r\n\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={path} className={styles.dialog__item}>\r\n        <div className={styles.dialog__wrapper}>\r\n          <img src={props.profPic} alt=\"avatarka\" />\r\n          {props.name}\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__Y7Bnq\"};","import React from 'react';\r\n\r\nimport styles from './Message.module.scss'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={styles.message}>\r\n        <img src=\"https://koshka.top/uploads/posts/2021-12/1638931898_6-koshka-top-p-koshek-na-avatarku-6.jpg\" alt=\"profPic\" />\r\n        {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message","// extracted by mini-css-extract-plugin\nexport default {\"dialogs__wrapper\":\"Dialogs_dialogs__wrapper__u2dhq\",\"dialogs__items\":\"Dialogs_dialogs__items__yWbAx\",\"dialogs__messages\":\"Dialogs_dialogs__messages__g49no\"};","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder='your message...' />\r\n            <button>Send message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DialogsForm","import { reduxForm } from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nexport default reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm);","import React from 'react';\r\n\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\n\r\nimport styles from './Dialogs.module.scss'\r\nimport AddMessageFormRedux from './AddMessageForm/AddMessageFormRedux';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  const addNewMessage = (formData) => {\r\n    props.sendMessage(formData.newMessageBody);\r\n  }\r\n\r\n  let dialogElements = props.dialogsPage.dialogs.map(d => <Dialog key={d.id} id={d.id} name={d.name} profPic={d.profPic} />),\r\n      messageElements = props.dialogsPage.messages.map(m => <Message key={m.id} id={m.id} message={m.message} />);\r\n\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <h2>Dialogs</h2>\r\n      <div className={styles.dialogs__wrapper}>\r\n        <div className={styles.dialogs__items}>\r\n          {dialogElements}\r\n        </div>\r\n        <div className={styles.dialogs__messages}>\r\n          {messageElements}\r\n          <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs'\r\n\r\nimport { sendMessage } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs)","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__JXR2U\",\"error\":\"FormsControls_error__gRq-8\"};","import styles from './FormsControls.module.scss'\r\n\r\nconst Element = (Element) => ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    \r\n    return (\r\n        <div className={`${styles.formControl} ${hasError && styles.error}`}>\r\n            <Element {...input} {...props} />\r\n            { hasError && <div>{meta.error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = Element('textarea')\r\nexport const Input = Element('input')","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required!'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols!`;\r\n    return undefined;\r\n}"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","_jsx","Navigate","to","path","concat","id","className","styles","dialog","children","NavLink","dialog__item","_jsxs","dialog__wrapper","src","profPic","alt","name","message","maxLength50","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","reduxForm","form","AddMessageForm","dialogElements","dialogsPage","dialogs","map","d","Dialog","messageElements","messages","m","Message","dialogs__wrapper","dialogs__items","dialogs__messages","AddMessageFormRedux","formData","sendMessage","newMessageBody","compose","Dialogs","Element","_ref","input","meta","hasError","error","touched","Input","value","maxLength","length"],"sourceRoot":""}