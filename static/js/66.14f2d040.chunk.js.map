{"version":3,"file":"static/js/66.14f2d040.chunk.js","mappings":"uOAKA,MAsBA,EAtBmBA,IAEfC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAMG,aAAaC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,GAAWC,KAAM,QAASC,YAAa,aAE7EP,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,GAAWC,KAAM,WAAYE,KAAM,WAAYD,YAAa,gBAElGX,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAOC,SAAU,GAAIE,KAAM,aAAcE,KAAM,aAAc,kBAEjFZ,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SACGJ,EAAMc,SAETT,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gB,aCjBhB,SAAeW,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,UAAzC,CAAqDC,G,cCCrD,MAiBA,EAjBelB,GAMTA,EAAMmB,QACDd,EAAAA,EAAAA,KAACe,EAAAA,GAAQ,CAACC,GAAG,cAGpBpB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAACiB,EAAc,CAACpB,SAXFqB,IAChB,IAAI,MAACC,EAAK,SAAEC,EAAQ,WAAEC,GAAcH,EACpCvB,EAAMwB,MAAMA,EAAOC,EAAUC,EAAW,OCC5C,GAAeX,EAAAA,EAAAA,KACXY,EAAAA,EAAAA,KALqBC,IAAK,CAC1BT,OAAQS,EAAMC,KAAKV,UAIM,CAAEK,MAAM,OADrC,CAEEM,E,0CCVF,QAA8B,mCAA9B,EAAyE,6B,aCCzE,MAAMC,EAAWA,GAAYC,IAA8B,IAA7B,MAACC,EAAK,KAAEC,KAASlC,GAAMgC,EACjD,MAAMG,EAAWD,EAAKpB,OAASoB,EAAKE,QAEpC,OACInC,EAAAA,EAAAA,MAAA,OAAKoC,UAAS,GAAAC,OAAKC,EAAkB,KAAAD,OAAIH,GAAYI,GAAenC,SAAA,EAChEC,EAAAA,EAAAA,KAAC0B,EAAO,IAAKE,KAAWjC,IACtBmC,IAAY9B,EAAAA,EAAAA,KAAA,OAAAD,SAAM8B,EAAKpB,UACvB,EAID0B,EAAWT,EAAQ,YACnBvB,EAAQuB,EAAQ,Q,0CCdtB,MAAMrB,EAAY+B,IACrB,IAAIA,EACJ,MAAO,oBAAoB,EAGlBC,EAAoBC,GAAeF,IAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAANL,OAAwBK,EAAS,YAC/C,C","sources":["pages/Login/LoginForm/LoginForm.jsx","pages/Login/LoginForm/LoginFormRedux.js","pages/Login/Login.jsx","pages/Login/LoginContainer.jsx","webpack://social-network-app/./src/pages/common/FormsControls/FormsControls.module.scss?c0b5","pages/common/FormsControls/FormsControls.jsx","utils/validators/validators.js"],"sourcesContent":["import React from 'react'\r\nimport { Field } from 'redux-form';\r\nimport { Input } from '../../common/FormsControls/FormsControls';\r\nimport { required } from '../../../utils/validators/validators';\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Input} validate={[required]} name={'login'} placeholder={'Login'} />\r\n      </div>\r\n      <div>\r\n        <Field component={Input} validate={[required]} name={'password'} type={'password'} placeholder={'Password'} />\r\n      </div>\r\n      <div>\r\n        <Field component={Input} validate={[]} name={'rememberMe'} type={'checkbox'} />Remember me\r\n      </div>\r\n      <div>\r\n        <div>\r\n          {props.error}\r\n        </div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import { compose } from \"redux\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nexport default compose(reduxForm({ form: 'login' }))(LoginForm);","import React from 'react'\r\nimport styles from './Login.module.scss'\r\nimport LoginFormRedux from './LoginForm/LoginFormRedux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    let {login, password, rememberMe} = formData\r\n    props.login(login, password, rememberMe);\r\n  }\r\n  \r\n  if (props.isAuth) {\r\n    return <Navigate to=\"/profile\" />\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>login</h2>\r\n      <LoginFormRedux onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport Login from \"./Login\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { login })\r\n)(Login)","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__JXR2U\",\"error\":\"FormsControls_error__gRq-8\"};","import styles from './FormsControls.module.scss'\r\n\r\nconst Element = (Element) => ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    \r\n    return (\r\n        <div className={`${styles.formControl} ${hasError && styles.error}`}>\r\n            <Element {...input} {...props} />\r\n            { hasError && <div>{meta.error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = Element('textarea')\r\nexport const Input = Element('input')","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required!'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols!`;\r\n    return undefined;\r\n}"],"names":["props","_jsxs","onSubmit","handleSubmit","children","_jsx","Field","component","Input","validate","required","name","placeholder","type","error","compose","reduxForm","form","LoginForm","isAuth","Navigate","to","LoginFormRedux","formData","login","password","rememberMe","connect","state","auth","Login","Element","_ref","input","meta","hasError","touched","className","concat","styles","Textarea","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}